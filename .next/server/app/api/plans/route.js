"use strict";(()=>{var e={};e.id=2542,e.ids=[2542],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},51228:(e,r,n)=>{n.r(r),n.d(r,{originalPathname:()=>h,patchFetch:()=>w,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>S,staticGenerationAsyncStorage:()=>y});var t={};n.r(t),n.d(t,{GET:()=>g,POST:()=>p});var o=n(49303),s=n(88716),a=n(60670),i=n(87070),l=n(75748),u=n(45991),d=n(11185),c=n.n(d);async function p(e){try{console.log("Received request to create plan");let{userId:r,subjects:n,startDate:t,endDate:o,dailyHours:s,tasks:a}=await e.json();if(console.log("Request data:",{userId:r,subjects:n,startDate:t,endDate:o,dailyHours:s,tasks:a}),!r||!n||!t||!o||!s||!a)return console.error("Missing required fields:",{userId:r,subjects:n,startDate:t,endDate:o,dailyHours:s,tasks:a}),i.NextResponse.json({error:"Missing required fields"},{status:400});if(!c().Types.ObjectId.isValid(r))return console.error("Invalid userId format:",r),i.NextResponse.json({error:"Invalid user ID format"},{status:400});if(!Array.isArray(a))return console.error("Tasks must be an array:",a),i.NextResponse.json({error:"Tasks must be an array"},{status:400});console.log("Connecting to database..."),await (0,l.Z)();let d=c().models.User||c().model("User",new(c()).Schema({name:String,email:String,password:String}));if(!await d.findById(r))return console.error("User not found:",r),i.NextResponse.json({error:"User not found"},{status:404});console.log("Creating study plan...");let p=await u.Z.create({userId:new(c()).Types.ObjectId(r),subjects:n,startDate:t,endDate:o,dailyHours:s,tasks:a});return console.log("Plan created successfully:",p),i.NextResponse.json(p,{status:201})}catch(e){return console.error("Error creating study plan:",e),i.NextResponse.json({error:"Error creating study plan: "+(e instanceof Error?e.message:"Unknown error")},{status:500})}}async function g(e){try{let{searchParams:r}=new URL(e.url),n=r.get("userId");if(!n)return i.NextResponse.json({error:"User ID is required"},{status:400});if(!c().Types.ObjectId.isValid(n))return i.NextResponse.json({error:"Invalid user ID format"},{status:400});console.log("Connecting to database..."),await (0,l.Z)();let t=c().models.User||c().model("User",new(c()).Schema({name:String,email:String,password:String}));if(!await t.findById(n))return console.error("User not found:",n),i.NextResponse.json({error:"User not found"},{status:404});console.log("Fetching plans for user:",n);let o=await u.Z.find({userId:new(c()).Types.ObjectId(n)});return console.log("Found plans:",o.length),i.NextResponse.json(o)}catch(e){return console.error("Error fetching plans:",e),i.NextResponse.json({error:"Error fetching study plans: "+(e instanceof Error?e.message:"Unknown error")},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/plans/route",pathname:"/api/plans",filename:"route",bundlePath:"app/api/plans/route"},resolvedPagePath:"D:\\武欣宇\\大三下\\计算机设计大赛\\StudyPlanner2\\src\\app\\api\\plans\\route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:f,staticGenerationAsyncStorage:y,serverHooks:S}=m,h="/api/plans/route";function w(){return(0,a.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:y})}},75748:(e,r,n)=>{n.d(r,{Z:()=>u,v:()=>l});var t=n(11185),o=n.n(t);let s=process.env.MONGODB_URI||"mongodb://localhost:27017/studyplanner";if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env");let a=global.mongoose;async function i(){if(a||(a=global.mongoose={conn:null,promise:null}),a.conn)return a.conn;a.promise||(a.promise=o().connect(s,{bufferCommands:!1}).then(e=>a));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}a||(a=global.mongoose={conn:null,promise:null});let l=i,u=i},45991:(e,r,n)=>{n.d(r,{Z:()=>i});var t=n(11185),o=n.n(t);let s=new(o()).Schema({id:String,date:String,subject:String,description:String,duration:Number,completed:Boolean}),a=new(o()).Schema({userId:{type:o().Schema.Types.ObjectId,ref:"User",required:!0},subjects:[String],startDate:String,endDate:String,dailyHours:Number,tasks:[s],createdAt:{type:Date,default:Date.now}},{toJSON:{transform:function(e,r){r.id=r._id.toString(),delete r._id,delete r.__v}}}),i=o().models.StudyPlan||o().model("StudyPlan",a)}};var r=require("../../../webpack-runtime.js");r.C(e);var n=e=>r(r.s=e),t=r.X(0,[9276,5972],()=>n(51228));module.exports=t})();